# Generated by Django 5.1 on 2025-05-11 12:39

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('admission', '0002_admissionnotice'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicQualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ssc_exam', models.CharField(blank=True, choices=[('SSC', 'SSC'), ('Dakhil', 'Dakhil'), ('SSC Vocational', 'SSC Vocational'), ('O Level/Cambridge', 'O Level/Cambridge'), ('SSC Equivalent', 'SSC Equivalent')], max_length=50, null=True, verbose_name='SSC Examination')),
                ('ssc_board', models.CharField(blank=True, choices=[('Dhaka', 'Dhaka'), ('Comilla', 'Comilla'), ('Rajshahi', 'Rajshahi'), ('Jessore', 'Jessore'), ('Chittagong', 'Chittagong'), ('Barisal', 'Barisal'), ('Sylhet', 'Sylhet'), ('Dinajpur', 'Dinajpur'), ('Madrasah', 'Madrasah'), ('Technical', 'Technical'), ('Cambridge International - IGCSE', 'Cambridge International - IGCSE'), ('Edexcel International', 'Edexcel International'), ('Others', 'Others')], max_length=50, null=True, verbose_name='SSC Board')),
                ('ssc_roll', models.CharField(blank=True, max_length=20, null=True)),
                ('ssc_result_type', models.CharField(blank=True, choices=[('1st Class', '1st Class'), ('2nd Class', '2nd Class'), ('GPA (out of 4)', 'GPA (out of 4)'), ('GPA (out of 5)', 'GPA (out of 5)')], max_length=20, null=True, verbose_name='SSC Result Type')),
                ('ssc_result', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(9.99)], verbose_name='SSC GPA')),
                ('ssc_group', models.CharField(blank=True, choices=[('Science', 'Science'), ('Humanities', 'Humanities'), ('Business Studies', 'Business Studies'), ('Others', 'Others')], max_length=20, null=True, verbose_name='SSC Group')),
                ('ssc_passing_year', models.IntegerField(blank=True, choices=[(1985, '1985'), (1986, '1986'), (1987, '1987'), (1988, '1988'), (1989, '1989'), (1990, '1990'), (1991, '1991'), (1992, '1992'), (1993, '1993'), (1994, '1994'), (1995, '1995'), (1996, '1996'), (1997, '1997'), (1998, '1998'), (1999, '1999'), (2000, '2000'), (2001, '2001'), (2002, '2002'), (2003, '2003'), (2004, '2004'), (2005, '2005'), (2006, '2006'), (2007, '2007'), (2008, '2008'), (2009, '2009'), (2010, '2010'), (2011, '2011'), (2012, '2012'), (2013, '2013'), (2014, '2014'), (2015, '2015'), (2016, '2016'), (2017, '2017'), (2018, '2018'), (2019, '2019'), (2020, '2020'), (2021, '2021'), (2022, '2022'), (2023, '2023'), (2024, '2024'), (2025, '2025')], null=True)),
                ('hsc_exam', models.CharField(blank=True, choices=[('HSC', 'HSC'), ('Alim', 'Alim'), ('Business Management', 'Business Management'), ('Diploma in Engineering/Agriculture', 'Diploma in Engineering/Agriculture'), ('A Level/Sr. Cambridge', 'A Level/Sr. Cambridge'), ('H.S.C Equivalent', 'H.S.C Equivalent')], max_length=50, null=True)),
                ('hsc_board', models.CharField(blank=True, choices=[('Dhaka', 'Dhaka'), ('Comilla', 'Comilla'), ('Rajshahi', 'Rajshahi'), ('Jessore', 'Jessore'), ('Chittagong', 'Chittagong'), ('Barisal', 'Barisal'), ('Sylhet', 'Sylhet'), ('Dinajpur', 'Dinajpur'), ('Madrasah', 'Madrasah'), ('Technical', 'Technical'), ('Cambridge International - IGCSE', 'Cambridge International - IGCSE'), ('Edexcel International', 'Edexcel International'), ('Others', 'Others')], max_length=50, null=True)),
                ('hsc_roll', models.CharField(blank=True, max_length=20, null=True)),
                ('hsc_result_type', models.CharField(blank=True, choices=[('1st Class', '1st Class'), ('2nd Class', '2nd Class'), ('GPA (out of 4)', 'GPA (out of 4)'), ('GPA (out of 5)', 'GPA (out of 5)')], max_length=50, null=True)),
                ('hsc_result', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(9.99)], verbose_name='HSC GPA')),
                ('hsc_group', models.CharField(blank=True, choices=[('Science', 'Science'), ('Humanities', 'Humanities'), ('Business Studies', 'Business Studies'), ('Others', 'Others')], max_length=50, null=True)),
                ('hsc_passing_year', models.IntegerField(blank=True, choices=[(1985, '1985'), (1986, '1986'), (1987, '1987'), (1988, '1988'), (1989, '1989'), (1990, '1990'), (1991, '1991'), (1992, '1992'), (1993, '1993'), (1994, '1994'), (1995, '1995'), (1996, '1996'), (1997, '1997'), (1998, '1998'), (1999, '1999'), (2000, '2000'), (2001, '2001'), (2002, '2002'), (2003, '2003'), (2004, '2004'), (2005, '2005'), (2006, '2006'), (2007, '2007'), (2008, '2008'), (2009, '2009'), (2010, '2010'), (2011, '2011'), (2012, '2012'), (2013, '2013'), (2014, '2014'), (2015, '2015'), (2016, '2016'), (2017, '2017'), (2018, '2018'), (2019, '2019'), (2020, '2020'), (2021, '2021'), (2022, '2022'), (2023, '2023'), (2024, '2024'), (2025, '2025')], null=True)),
                ('graduation_exam', models.CharField(blank=True, choices=[('Bachelor Degree (Science Background)', 'Bachelor Degree (Science Background)'), ('Bachelor Degree (Arts Background)', 'Bachelor Degree (Arts Background)'), ('Bachelor Degree (Commerce Background)', 'Bachelor Degree (Commerce Background'), ('Bachelor Degree (Engineering Background)', 'Bachelor Degree (Engineering Background)'), ('Bachelor Degree (Others Background)', 'Bachelor Degree (Others Background)')], max_length=200, null=True)),
                ('graduation_subject', models.CharField(blank=True, max_length=100, null=True)),
                ('graduation_university', models.CharField(blank=True, max_length=100, null=True)),
                ('graduation_result_type', models.CharField(blank=True, choices=[('1st Class', '1st Class'), ('2nd Class', '2nd Class'), ('GPA (out of 4)', 'GPA (out of 4)'), ('GPA (out of 5)', 'GPA (out of 5)'), ('Pass', 'Pass')], max_length=100, null=True)),
                ('graduation_result', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(9.99)], verbose_name='Honors CGPA')),
                ('graduation_passing_year', models.IntegerField(blank=True, choices=[(1985, '1985'), (1986, '1986'), (1987, '1987'), (1988, '1988'), (1989, '1989'), (1990, '1990'), (1991, '1991'), (1992, '1992'), (1993, '1993'), (1994, '1994'), (1995, '1995'), (1996, '1996'), (1997, '1997'), (1998, '1998'), (1999, '1999'), (2000, '2000'), (2001, '2001'), (2002, '2002'), (2003, '2003'), (2004, '2004'), (2005, '2005'), (2006, '2006'), (2007, '2007'), (2008, '2008'), (2009, '2009'), (2010, '2010'), (2011, '2011'), (2012, '2012'), (2013, '2013'), (2014, '2014'), (2015, '2015'), (2016, '2016'), (2017, '2017'), (2018, '2018'), (2019, '2019'), (2020, '2020'), (2021, '2021'), (2022, '2022'), (2023, '2023'), (2024, '2024'), (2025, '2025')], null=True)),
                ('graduation_course_duration', models.CharField(blank=True, choices=[('3', '3'), ('4', '4'), ('5', '5')], max_length=20, null=True)),
                ('graduation_certificate', models.FileField(blank=True, null=True, upload_to='certificates/')),
                ('graduation_transcript', models.FileField(blank=True, null=True, upload_to='transcripts/')),
                ('post_graduation_exam', models.CharField(blank=True, choices=[('Master Degree (Science Background)', 'Master Degree (Science Background)'), ('Master Degree (Arts Background)', 'Master Degree (Arts Background)'), ('Master Degree (Commerce Background)', 'Master Degree (Commerce Background'), ('Master Degree (Engineering Background)', 'Master Degree (Engineering Background)'), ('Master Degree (Others Background)', 'Master Degree (Others Background)')], max_length=200, null=True)),
                ('post_graduation_subject', models.CharField(blank=True, max_length=100, null=True)),
                ('post_graduation_university', models.CharField(blank=True, max_length=100, null=True)),
                ('post_graduation_result_type', models.CharField(blank=True, choices=[('1st Class', '1st Class'), ('2nd Class', '2nd Class'), ('GPA (out of 4)', 'GPA (out of 4)'), ('GPA (out of 5)', 'GPA (out of 5)'), ('Pass', 'Pass')], max_length=100, null=True)),
                ('post_graduation_result', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(9.99)])),
                ('post_graduation_passing_year', models.IntegerField(blank=True, choices=[(1985, '1985'), (1986, '1986'), (1987, '1987'), (1988, '1988'), (1989, '1989'), (1990, '1990'), (1991, '1991'), (1992, '1992'), (1993, '1993'), (1994, '1994'), (1995, '1995'), (1996, '1996'), (1997, '1997'), (1998, '1998'), (1999, '1999'), (2000, '2000'), (2001, '2001'), (2002, '2002'), (2003, '2003'), (2004, '2004'), (2005, '2005'), (2006, '2006'), (2007, '2007'), (2008, '2008'), (2009, '2009'), (2010, '2010'), (2011, '2011'), (2012, '2012'), (2013, '2013'), (2014, '2014'), (2015, '2015'), (2016, '2016'), (2017, '2017'), (2018, '2018'), (2019, '2019'), (2020, '2020'), (2021, '2021'), (2022, '2022'), (2023, '2023'), (2024, '2024'), (2025, '2025')], null=True)),
                ('post_graduation_course_duration', models.CharField(blank=True, choices=[('1', '1'), ('1.5', '1.5'), ('2', '2'), ('3', '3')], max_length=20, null=True)),
                ('create_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('applicant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='academic_qualification', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('Paid', 'Paid'), ('Pending', 'Pending')], default='Pending', max_length=20)),
                ('payment_method', models.CharField(choices=[('bkash', 'Bkash'), ('nagad', 'Nagad')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('applicant', models.OneToOneField(limit_choices_to={'role': 'applicant'}, on_delete=django.db.models.deletion.CASCADE, related_name='payment', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PersonalInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('father_name', models.CharField(blank=True, max_length=200, null=True)),
                ('mother_name', models.CharField(blank=True, max_length=200, null=True)),
                ('date_of_birth', models.CharField(blank=True, max_length=15, null=True)),
                ('sex', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True)),
                ('religion', models.CharField(blank=True, choices=[('Islam', 'Islam'), ('Hinduism', 'Hinduism'), ('Christianity', 'Christianity'), ('Buddhism', 'Buddhism'), ('Other', 'Other')], max_length=25, null=True)),
                ('blood_group', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('O+', 'O+'), ('O-', 'O-'), ('AB+', 'AB+'), ('AB-', 'AB-')], max_length=5, null=True)),
                ('nationality', models.CharField(blank=True, choices=[('Bangladesh', 'Bangladesh'), ('Others', 'Others')], max_length=50, null=True)),
                ('national_id', models.CharField(blank=True, max_length=20, null=True)),
                ('present_address', models.TextField(blank=True, null=True)),
                ('permanent_address', models.TextField(blank=True, null=True)),
                ('create_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('applicant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='personal_info', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applicant_image', models.ImageField(default='applicant_img', upload_to='photos/')),
                ('applicant_sig', models.ImageField(default='applicant_img', upload_to='signatures/')),
                ('create_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('applicant', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='applicant_photo', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ResultPrepare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], max_length=1)),
                ('mcq_marks', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('job_marks', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('academic_marks', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('total_marks', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('applicant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='result_prepare', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RollNumberSeed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('starting_number', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('intake', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='admission.intake')),
            ],
        ),
    ]
